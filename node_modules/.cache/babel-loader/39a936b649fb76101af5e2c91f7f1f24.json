{"ast":null,"code":"// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}; // Convert a number to money formatting\n\nexport const convertMoney = money => {\n  const formatValue = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"INR\",\n    minimumFractionDigits: 0\n  });\n  return formatValue.format(money);\n}; // Session Storage\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};","map":{"version":3,"sources":["E:/Studia/Sem5/Aplikacje JavaScript/movies-app/src/helpers/helpers.ts"],"names":["calcTime","time","hours","Math","floor","mins","convertMoney","money","formatValue","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","JSON","parse"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAIC,IAAD,IAAyB;AAC/C,QAAMC,KAAa,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAtB;AACA,QAAMI,IAAW,GAAGJ,IAAI,GAAG,EAA3B;AACA,SAAQ,GAAEC,KAAM,KAAIG,IAAK,GAAzB;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAA0B;AACpD,QAAMC,WAA8B,GAAG,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AACpEC,IAAAA,KAAK,EAAE,UAD6D;AAEpEC,IAAAA,QAAQ,EAAE,KAF0D;AAGpEC,IAAAA,qBAAqB,EAAE;AAH6C,GAA/B,CAAvC;AAKA,SAAOL,WAAW,CAACM,MAAZ,CAAmBP,KAAnB,CAAP;AACD,CAPM,C,CASP;;AACA,OAAO,MAAMQ,gBAAgB,GAAIC,SAAD,IAA0B;AACxD,QAAMC,YAAY,GAAGC,cAAc,CAACC,OAAf,CAAuBH,SAAvB,CAArB;AACA,SAAOC,YAAY,IAAIG,IAAI,CAACC,KAAL,CAAWJ,YAAX,CAAvB;AACD,CAHM","sourcesContent":["// Convert time to hours and minutes\r\nexport const calcTime = (time: number):string => {\r\n  const hours: number = Math.floor(time / 60);\r\n  const mins:number = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n\r\n// Convert a number to money formatting\r\nexport const convertMoney = (money: number):string => {\r\n  const formatValue: Intl.NumberFormat = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatValue.format(money);\r\n};\r\n\r\n// Session Storage\r\nexport const isPersistedState = (stateName:string):any => {\r\n  const sessionState = sessionStorage.getItem(stateName);\r\n  return sessionState && JSON.parse(sessionState);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}