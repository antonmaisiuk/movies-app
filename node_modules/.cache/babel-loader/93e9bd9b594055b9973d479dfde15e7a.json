{"ast":null,"code":"var _jsxFileName = \"E:\\\\Studia\\\\Sem5\\\\Aplikacje JavaScript\\\\movies-app\\\\src\\\\components\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './styles.loginModule.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState(''); // const handleSubmit = (event: { preventDefault: () => void; }) => {\n  //   event.preventDefault();\n  //Początek pobierania danych i logowania\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      setError('Podaj adres e-mail i hasło.');\n    } else {\n      setError('');\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'Post',\n        // headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json(); //pomyślne logowanie\n\n        console.log(data);\n        setSuccessMessage('Zalogowano pomyślnie.'); //tutaj możesz zaimplementować zmianę stanu aplikacji np. przekierowanie do innej strony po zalogowaniu\n      } else {\n        const error = await response.json(); //błąd logowania\n\n        setError(error.message);\n      }\n    }\n  }; //};\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: login,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Adres e-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Has\\u0142o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 26\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Zaloguj si\\u0119\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"tbR/JIuTDIUzFlVZpvJrlMMIpE8=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["E:/Studia/Sem5/Aplikacje JavaScript/movies-app/src/components/Login/Login.tsx"],"names":["React","useState","LoginForm","email","setEmail","password","setPassword","error","setError","successMessage","setSuccessMessage","handleSubmit","e","preventDefault","response","fetch","method","body","JSON","stringify","ok","data","json","console","log","message","login","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgCC,QAAhC,QAAgD,OAAhD;AACA,OAAO,0BAAP;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD,CAJmB,CAMnB;AACA;AAEE;;AAEA,QAAMU,YAAY,GAAG,MAAOC,CAAP,IAA6B;AAChDA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACV,KAAD,IAAU,CAACE,QAAf,EAAyB;AACvBG,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,YAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AAC1DC,QAAAA,MAAM,EAAE,MADkD;AAE1D;AACAC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhB,UAAAA,KAAK,EAAEA,KADY;AAEnBE,UAAAA,QAAQ,EAAEA;AAFS,SAAf;AAHoD,OAAhC,CAA5B;;AAQA,UAAIS,QAAQ,CAACM,EAAb,EAAiB;AACf,cAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB,CADe,CAEf;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAX,QAAAA,iBAAiB,CAAC,uBAAD,CAAjB,CAJe,CAKf;AACD,OAND,MAMO;AACL,cAAMH,KAAK,GAAG,MAAMO,QAAQ,CAACQ,IAAT,EAApB,CADK,CAEL;;AACAd,QAAAA,QAAQ,CAACD,KAAK,CAACkB,OAAP,CAAR;AACD;AACF;AACJ,GA1BC,CAXiB,CAsCnB;;;AAEA,sBACE;AAAM,IAAA,SAAS,EAAEC,KAAjB;AAAwB,IAAA,QAAQ,EAAEf,YAAlC;AAAA,4BACE;AAAA,+CAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,KAAK,EAAER,KAA3B;AAAkC,QAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACe,MAAF,CAASC,KAAV;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6CAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEvB,QAA9B;AAAwC,QAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACe,MAAF,CAASC,KAAV;AAApE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EASGnB,cAAc,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YATrB,EAUGF,KAAK,iBAAI;AAAA,gBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAVZ,eAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvDQL,S;;KAAAA,S;AAyDT,eAAeA,SAAf","sourcesContent":["import React, { SyntheticEvent, useState } from 'react';\r\nimport './styles.loginModule.css'\r\n\r\nfunction LoginForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  // const handleSubmit = (event: { preventDefault: () => void; }) => {\r\n  //   event.preventDefault();\r\n\r\n    //Początek pobierania danych i logowania\r\n\r\n    const handleSubmit = async (e: SyntheticEvent) => {\r\n      e.preventDefault();\r\n      if (!email || !password) {\r\n        setError('Podaj adres e-mail i hasło.');\r\n      } else {\r\n        setError('');\r\n        const response = await fetch('http://localhost:3000/login', {\r\n          method: 'Post',\r\n          // headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n          }),\r\n        });\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          //pomyślne logowanie\r\n          console.log(data);\r\n          setSuccessMessage('Zalogowano pomyślnie.');\r\n          //tutaj możesz zaimplementować zmianę stanu aplikacji np. przekierowanie do innej strony po zalogowaniu\r\n        } else {\r\n          const error = await response.json();\r\n          //błąd logowania\r\n          setError(error.message);\r\n        }\r\n      }\r\n  };\r\n  //};\r\n\r\n  return (\r\n    <form className={login} onSubmit={handleSubmit}>\r\n      <label>\r\n        Adres e-mail:\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        Hasło:\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      {successMessage && <div>{successMessage}</div>}\r\n      {error && <p>{error}</p>}\r\n      <button type=\"submit\">Zaloguj się</button>\r\n    </form> \r\n  );\r\n}\r\n\r\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}