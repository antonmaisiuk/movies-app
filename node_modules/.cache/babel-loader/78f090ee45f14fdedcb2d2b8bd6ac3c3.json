{"ast":null,"code":"var _jsxFileName = \"E:\\\\Studia\\\\Sem5\\\\Aplikacje JavaScript\\\\movies-app\\\\src\\\\components\\\\SearchBar\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Wrapper, Content } from \"./SearchBar.styles\";\nimport searchIcon from \"../../images/search-icon.svg\"; // Types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = _ref => {\n  _s();\n\n  let {\n    setSearchTerm\n  } = _ref;\n  const [state, setState] = useState(\"\");\n\n  const handleChange = e => {\n    setState(e.currentTarget.value);\n  };\n\n  const initial = useRef(true);\n  useEffect(() => {\n    if (initial.current) {\n      initial.current = false;\n      return;\n    }\n\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: searchIcon,\n          alt: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search Movie\",\n          onChange: handleChange,\n          value: state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"ZJ5wzy1Z+bCyQe0vlJTrb2f3+qA=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["E:/Studia/Sem5/Aplikacje JavaScript/movies-app/src/components/SearchBar/index.tsx"],"names":["React","useState","useEffect","useRef","Wrapper","Content","searchIcon","SearchBar","setSearchTerm","state","setState","handleChange","e","currentTarget","value","initial","current","timer","setTimeout","clearTimeout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,oBAAjC;AAEA,OAAOC,UAAP,MAAuB,8BAAvB,C,CAEA;;;;AAKA,MAAMC,SAA0B,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMU,YAAY,GAAIC,CAAD,IAAW;AAC9BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAR;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGZ,MAAM,CAAC,IAAD,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,OAAO,CAACC,OAAZ,EAAqB;AACnBD,MAAAA,OAAO,CAACC,OAAR,GAAkB,KAAlB;AACA;AACD;;AACD,UAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BV,MAAAA,aAAa,CAACC,KAAD,CAAb;AACD,KAFuB,EAErB,GAFqB,CAAxB;AAGA,WAAO,MAAMU,YAAY,CAACF,KAAD,CAAzB;AACD,GATQ,EASN,CAACT,aAAD,EAAgBC,KAAhB,CATM,CAAT;AAWA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,OAAD;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEH,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,QAAQ,EAAEK,YAHZ;AAIE,UAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlCD;;GAAMF,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Wrapper, Content } from \"./SearchBar.styles\";\r\n\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\n// Types\r\ntype Props = {\r\n  setSearchTerm: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nconst SearchBar: React.FC<Props> = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState(\"\");\r\n  const handleChange = (e:any) => {\r\n    setState(e.currentTarget.value);\r\n  };\r\n\r\n  const initial = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500);\r\n    return () => clearTimeout(timer);\r\n  }, [setSearchTerm, state]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Wrapper>\r\n        <Content>\r\n          <img src={searchIcon} alt=\"search-icon\" />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search Movie\"\r\n            onChange={handleChange}\r\n            value={state}\r\n          />\r\n        </Content>\r\n      </Wrapper>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}